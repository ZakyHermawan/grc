id: python_nogui_workflow
description: "python no gui workflow"
output_language: python
output_language_label: Python
generator_module: gnuradio_companion.workflows.python_nogui
generator_class: TopBlockGenerator
generator_options: no_gui
generator_options_label: No GUI
parameters:
-   id: run_options
    label: Run Options
    dtype: enum
    default: prompt
    options: [run, prompt]
    option_labels: [Run to Completion, Prompt for Exit]
    hide: 'none'
-   id: run
    label: Run
    dtype: bool
    default: 'True'
    options: ['True', 'False']
    option_labels: [Autostart, 'Off']
    hide: ${ 'part' if run else 'none' }
-   id: max_nouts
    label: Max Number of Output
    dtype: int
    default: '0'
    hide: ${ 'none' if max_nouts else 'part' }
-   id: realtime_scheduling
    label: Realtime Scheduling
    dtype: enum
    options: ['', '1']
    option_labels: ['Off', 'On']
    hide: ${ 'none' if realtime_scheduling else 'part' }
-   id: run_command
    label: Run Command
    category: Advanced
    dtype: string
    default: '{python} -u {filename}'
    hide: 'part'
templates:
    imports: |-
        from gnuradio import gr
        from gnuradio.filter import firdes
        from gnuradio.fft import window
        import sys
        import signal
        % if generate_options == 'qt_gui':
        from PyQt5 import Qt
        % endif
        % if not generate_options.startswith('hb'):
        from argparse import ArgumentParser
        from gnuradio.eng_arg import eng_float, intx
        from gnuradio import eng_notation
        % endif
    callbacks:
    - 'if ${run}: self.start()

        else: self.stop(); self.wait()'
